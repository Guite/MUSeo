<?php
/**
 * MUSeo.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUSeo
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

/**
 * Ajax controller class providing navigation and interaction functionality.
 */
class MUSeo_Controller_Ajax extends MUSeo_Controller_Base_Ajax
{
    // feel free to add your own controller methods here
    
	/**
	 * Checks whether a field value is a duplicate or not.
	 *
	 * @param string $ot Treated object type.
	 * @param string $fn Name of field to be checked.
	 * @param string $v  The value to be checked for uniqueness.
	 * @param string $ex Optional identifier to be excluded from search.
	 *
	 * @return Zikula_Response_Ajax
	 */
	public function scoreURL()
	{
		$this->checkAjaxToken();
		$this->throwForbiddenUnless(SecurityUtil::checkPermission($this->name . '::Ajax', '::', ACCESS_EDIT));
		
		$url = $this->request->query->filter('url', '', FILTER_SANITIZE_STRING);
		$keyword = $this->request->query->filter('keyword', '', FILTER_SANITIZE_STRING);
	
		if (empty($url) || empty($keyword)) {
			return new Zikula_Response_Ajax_BadData($this->__('Error: invalid input.'));
		}
	
		$scoringApi = new MUSeo_Api_Scoring($this->serviceManager);
		$result = $scoringApi->score($url, $keyword);
		
		return new Zikula_Response_Ajax($result);
	}
}
