<?php
/**
 * MUSeo.
 *
 * @copyright Michael ueberschaer
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUSeo
 * @author Michael ueberschaer <konakt@webdesign-in-bremen.com>.
 * @link http://webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Tue Nov 20 20:20:03 CET 2012.
 */

/**
 * HandleModules controller class.
 */
class MUSeo_Controller_Base_HandleModules extends Zikula_AbstractController
{
    /**
     * Post initialise.
     *
     * Run after construction.
     *
     * @return void
     */
    protected function postInitialize()
    {
        // Set caching to true by default.
        $this->view->setCaching(Zikula_View::CACHE_ENABLED);
    }

    /**
     * This is a custom method. Documentation for this will be improved in later versions.
     *
     * @return mixed Output.
     */
    public function checkModule($args)
    {
        // DEBUG: permission check aspect starts
        $this->throwForbiddenUnless(SecurityUtil::checkPermission('MUSeo::', '::', ACCESS_OVERVIEW));
        // DEBUG: permission check aspect ends

        // parameter specifying which type of objects we are treating
        $objectType = (isset($args['ot']) && !empty($args['ot'])) ? $args['ot'] : $this->request->getGet()->filter('ot', 'metatag', FILTER_SANITIZE_STRING);
        $utilArgs = array('controller' => 'handlemodules', 'action' => 'checkModule');
        if (!in_array($objectType, MUSeo_Util_Controller::getObjectTypes('controllerAction', $utilArgs))) {
            $objectType = MUSeo_Util_Controller::getDefaultObjectType('controllerAction', $utilArgs);
        }
        /** TODO: custom logic */

        // return template
        return $this->view->fetch('handlemodules/checkModule.tpl');
    }

    /**
     * This is a custom method. Documentation for this will be improved in later versions.
     *
     * @return mixed Output.
     */
    public function getEntities($args)
    {
        // DEBUG: permission check aspect starts
        $this->throwForbiddenUnless(SecurityUtil::checkPermission('MUSeo::', '::', ACCESS_OVERVIEW));
        // DEBUG: permission check aspect ends

        // parameter specifying which type of objects we are treating
        $objectType = (isset($args['ot']) && !empty($args['ot'])) ? $args['ot'] : $this->request->getGet()->filter('ot', 'metatag', FILTER_SANITIZE_STRING);
        $utilArgs = array('controller' => 'handlemodules', 'action' => 'getEntities');
        if (!in_array($objectType, MUSeo_Util_Controller::getObjectTypes('controllerAction', $utilArgs))) {
            $objectType = MUSeo_Util_Controller::getDefaultObjectType('controllerAction', $utilArgs);
        }
        /** TODO: custom logic */

        // return template
        return $this->view->fetch('handlemodules/getEntities.tpl');
    }
}
